{"version":3,"sources":["MenuBar.js","About.js","3dPrint.js","BoardGames.js","DiscGolf.js","Calculator.js","App.js","serviceWorker.js","index.js"],"names":["MenuBar","props","className","onClick","this","changeView","React","Component","About","state","something","ThreeDPrint","BoardGames","DiscGolf","Calculator","Calculate","registerVal","registerFunc","currentVal","setState","parseFloat","Math","pow","console","log","startFresh","ButtonPressed","event","mathType","target","innerHTML","PI","cos","sin","tan","sqrt","id","readOnly","defaultValue","Identity","click","CalcButton","App","ChangeView","currentView","bind","theView","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fad812b4.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Site.css';\r\nimport './MenuBar.css';\r\n\r\nexport default class MenuBar extends React.Component{\r\n\r\n  constructor(props){\r\n       \tsuper(props); \r\n  }\r\n\r\n   render() {\r\n   \treturn(\r\n\t<div>\r\n\t<nav className=\"NavBar\">\r\n\t\t<ul className=\"NavList\">\r\n\t\t\t<button className='NavItem'  onClick={this.props.changeView}>Home</button>\r\n\t\t\t<button className='NavItem'  onClick={this.props.changeView}>Board Games</button>\r\n\t\t\t<button className='NavItem' onClick={this.props.changeView}>3D Printing</button>\r\n\t\t\t<button className='NavItem'  onClick={this.props.changeView}>Disc Golf</button>\r\n\t\t\t<button className='NavItem'  onClick={this.props.changeView}>Calculator</button>\r\n\t\t\t<button className='NavItemLast'  onClick={this.props.changeView}>Contact</button>\r\n\t\t</ul>\r\n\t</nav>\r\n\t</div>   \t\r\n\t)\r\n   }\r\n}","import React from 'react';\r\nimport './Site.css';\r\n\r\n\r\nexport default class About extends React.Component{\r\n\r\n  constructor(){\r\n       \tsuper(); \r\n\tthis.state = {\r\n            something:0,           //  Current value of entry\r\n\t         }\r\n  }\r\n\r\n   render() {\r\n        return(\r\n           <div>\r\n                <h1>  Welcome to Don's Sandbox </h1>\r\n                <br />\r\n                <p> I built this site mainly as a way to pratice some web development. The site will likely\r\n                    be under constant construction as I try to extend my knowledge of web development.</p>\r\n                <p> This site is build with React and is a single page app. If you want to poke around each\r\n                page has a specific purpose, at lease as I have it planned.</p>\r\n\t         </div>)\r\n   }\r\n}\r\n  \r\n ","import React from 'react';\r\n//import './Calculator.css';\r\n\r\n\r\nexport default class ThreeDPrint extends React.Component{\r\n\r\n  constructor(){\r\n       \tsuper(); \r\n\tthis.state = {\r\n            something:0,           //  Current value of entry\r\n\t         }\r\n  }\r\n \r\n\r\n   render() {\r\n        return(\r\n           <div>\r\n               <h1>  Coming soon infor about 3d printing </h1>\r\n\t         </div>\r\n\t     )\r\n   }\r\n}\r\n  ","import React from 'react';\r\n//import './Calculator.css';\r\n\r\n\r\nexport default class BoardGames extends React.Component{\r\n\r\n  constructor(){\r\n       \tsuper(); \r\n\tthis.state = {\r\n            something:0,           //  Current value of entry\r\n\t         }\r\n  }\r\n\r\n\r\n   render() {\r\n        return(\r\n           <div>\r\n               <h1>  Coming Soon pulling information from BGG </h1>\r\n\t         </div>\r\n\t     )\r\n   }\r\n}\r\n\r\n","import React from 'react';\r\n//import './Calculator.css';\r\n\r\n\r\nexport default class DiscGolf extends React.Component{\r\n\r\n  constructor(){\r\n       \tsuper(); \r\n\tthis.state = {\r\n            something:0,           //  Current value of entry\r\n\t         }\r\n  }\r\n\r\n   render() {\r\n        return(\r\n           <div>\r\n               <h1>  Coming soon ability to record your scores.</h1>\r\n\t         </div>\r\n\t     )\r\n   }\r\n}\r\n  \r\n","import React from 'react';\r\nimport './Calculator.css';\r\n// import CalcButton from './CalcButton.js';  \r\n\r\nclass Calculator extends React.Component{\r\n\r\n  constructor(){\r\n       \tsuper(); \r\n\tthis.state = {\r\n //           displayVal: \"0\",        \r\n            currentVal:0,           //  Current value of entry\r\n            registerVal: 0,         // the previous value of the entry after a operator is pressed\r\n            registerFunc: null,     // the pressed operator\r\n            startFresh: true,       // an operator was pressed so next number should start a new entry;\r\n            mathType: \"Deg\",\r\n\t         }\r\n  }\r\n\r\n  Calculate = () =>\r\n  {\r\n    // deconstruct the state variable for easier reading\r\n    const {registerVal, registerFunc, currentVal} = this.state;\r\n\r\n     switch (registerFunc)\r\n     {\r\n\t     case '+':  this.setState({currentVal: parseFloat(registerVal) + parseFloat(currentVal)}); break; \r\n\t     case '-':  this.setState({currentVal: parseFloat(registerVal) - parseFloat(currentVal)}); break; \r\n\t     case '*':  this.setState({currentVal: parseFloat(registerVal) * parseFloat(currentVal)}); break; \r\n\t     case '/':  this.setState({currentVal: parseFloat(registerVal) / parseFloat(currentVal)}); break; \r\n       case 'x^y': this.setState({currentVal: Math.pow(parseFloat(currentVal), parseFloat(registerVal))}); break; \r\n\t     default: console.log('Bad Case ', registerFunc);\r\n     }\r\n     this.setState({registerFunc:null});\r\n     this.setState({startFresh: true});\r\n   }\r\n\r\n\r\n  ButtonPressed = (event) =>\r\n  {\r\n    // deconstruct the state variable for easier reading\r\n    const {mathType, currentVal, startFresh} = this.state;\r\n\r\n    // A number was pressed\r\n    if((event.target.innerHTML > -1 & event.target.innerHTML < 10) || event.target.innerHTML === '.')\r\n    {\r\n      if (startFresh)\r\n      {\r\n        this.setState({currentVal: event.target.innerHTML});\r\n        this.setState({startFresh: false});\r\n      }\r\n      else\r\n      {\r\n            this.setState({currentVal: currentVal +  event.target.innerHTML});\r\n      }\r\n    }\r\n    else  // An operand was pressed\r\n    {\r\n      switch(event.target.innerHTML)\r\n      {\r\n        // 2 operand functions\r\n        case '-':\r\n        case '+':\r\n        case '/': \r\n        case '*':\r\n        case 'x^y':\r\n          if(this.state.registerFunc === null)\r\n          {\r\n            this.setState({registerVal: currentVal}); \r\n          }\r\n          else\r\n          {\r\n            this.Calculate();   // The sets the registerVal \r\n          }\r\n          this.setState({registerFunc: event.target.innerHTML});\r\n          this.setState({startFresh: true});\r\n          break;\r\n\r\n          // Clearing functions\r\n          case 'C': this.setState({registerVal: 0}); this.setState({registerFunc: null});  // eslint-disable-next-line\r\n          case 'CE':  this.setState({currentVal: 0}); this.setState({startFresh: true}); break ;\r\n\r\n          //Single operand functions.\r\n          case 'Pi': this.setState({currentVal: Math.PI}); break ;\r\n          case 'cos':  (mathType === 'Rad') ? \r\n                            this.setState({currentVal: Math.cos(currentVal)}) : \r\n                            this.setState({currentVal: Math.cos(currentVal*(Math.PI/180))})\r\n                            break ;\r\n          case 'sin':  (mathType === 'Rad') ? \r\n                            this.setState({currentVal: Math.sin(currentVal)}) : \r\n                            this.setState({currentVal: Math.sin(currentVal*(Math.PI/180))})\r\n                            break ;\r\n          case 'tan':  (mathType === 'Rad') ? \r\n                            this.setState({currentVal: Math.tan(currentVal)}) : \r\n                            this.setState({currentVal: Math.tan(currentVal*(Math.PI/180))})\r\n                            break ;\r\n          case 'Log': this.setState({currentVal: Math.log(currentVal)});break ;\r\n          case 'Sqrt': this.setState({currentVal: Math.sqrt(currentVal)}); break ;\r\n\r\n          case 'Deg': this.setState({mathType: 'Rad'}); break ;\r\n          case 'Rad': this.setState({mathType: \"Deg\"}); break ;\r\n\r\n          case '=': this.Calculate();  break ;\r\n\t      default: \r\n          console.log('Missing case ', event.target.innerHTML);\r\n\t  }\r\n      }\r\n  }\r\n\r\n   render() {\r\n        return(\r\n            <div id=\"CalcFrame\">\r\n  \t        <textarea id='CalcDisplay' readOnly defaultValue={this.state.currentVal}></textarea>\r\n        <CalcButton Identity=\"sin\" click={this.ButtonPressed} />\r\n        <CalcButton Identity=\"cos\" click={this.ButtonPressed} />\r\n        <CalcButton Identity=\"tan\" click={this.ButtonPressed} />\r\n        <CalcButton Identity=\"log\" click={this.ButtonPressed} />\r\n        <CalcButton Identity=\"Pi\" click={this.ButtonPressed} />\r\n        <CalcButton Identity=\"Sqrt\" click={this.ButtonPressed} />\r\n        <CalcButton Identity=\"x^y\" click={this.ButtonPressed} />\r\n        <CalcButton Identity={this.state.mathType} click={this.ButtonPressed} />\r\n        <CalcButton Identity=\"1\" click={this.ButtonPressed} />\r\n    \t\t<CalcButton Identity=\"2\" click={this.ButtonPressed} />\r\n    \t\t<CalcButton Identity=\"3\" click={this.ButtonPressed} />\r\n\t   \t  <CalcButton Identity=\"/\" click={this.ButtonPressed} />\r\n    \t\t<CalcButton Identity=\"4\" click={this.ButtonPressed} />\r\n    \t\t<CalcButton Identity=\"5\" click={this.ButtonPressed} />\r\n    \t\t<CalcButton Identity=\"6\" click={this.ButtonPressed} />\r\n    \t\t<CalcButton Identity=\"*\" click={this.ButtonPressed} />\r\n    \t\t<CalcButton Identity=\"7\" click={this.ButtonPressed} />\r\n    \t\t<CalcButton Identity=\"8\" click={this.ButtonPressed} />\r\n    \t\t<CalcButton Identity=\"9\" click={this.ButtonPressed} />\r\n    \t\t<CalcButton Identity=\"-\" click={this.ButtonPressed} />\r\n    \t\t<CalcButton Identity=\".\" click={this.ButtonPressed} />\r\n    \t\t<CalcButton Identity=\"0\" click={this.ButtonPressed} />\r\n    \t\t<CalcButton Identity=\"<-\" click={this.ButtonPressed} />\r\n    \t\t<CalcButton Identity=\"+\" click={this.ButtonPressed} />\r\n    \t\t<CalcButton Identity=\"C\" click={this.ButtonPressed} />\r\n    \t\t<CalcButton Identity=\"CE\" click={this.ButtonPressed} />\r\n        <br />\r\n        <CalcButton id=\"ButtonEqual\" Identity=\"=\" click={this.ButtonPressed} />\r\n\t     </div>\r\n\t     )\r\n   }\r\n}\r\n\r\nconst CalcButton = ({Identity, click}) => {\r\n   return(\r\n  <button className=\"BasicCalcButton\" onClick={click} >{Identity}</button>\r\n  );\r\n}\r\n\r\n\r\nexport default Calculator;\r\n","import React from 'react';\nimport './App.css';\nimport MenuBar from './MenuBar'\nimport About from './About'\nimport ThreeDPrint from './3dPrint'\nimport BoardGames from './BoardGames'\nimport DiscGolf from './DiscGolf'\nimport Calculator from './Calculator'\n\n\nclass App extends React.Component{\n\n  constructor(){\n       \tsuper(); \n\t    this.state = {\n            currentView: 'About',  //  Current value of entry\n\t         }\n        // needed for strang \"this\" reasons.\n\t    this.ChangeView = this.ChangeView.bind(this);\n  }\n\n  ChangeView = (event) => {\n       this.setState({currentView: event.target.innerHTML});\n  }\n\n   render() {\n    let theView;\n\n    // can't have conidtionals inside the return function so need to\n    // create varabiles to render ahead of time.\n    switch(this.state.currentView){\n    \tcase 'Home' : theView = <About />; break;\n    \tcase 'Board Games' : theView = <BoardGames />; break;\n    \tcase '3D Printing' : theView = <ThreeDPrint />; break;\n    \tcase 'Disc Golf' : theView = <DiscGolf />; break;\n        case 'Calculator': theView = <Calculator />;  break;\n        default: theView = <h1> Bad link </h1>;  break;\n    }\n\n   \treturn(\n\t<div>\n    \t<MenuBar changeView={this.ChangeView}/>\n        {theView}\n\n\t</div>   \t\n\t)\n   } // end render\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}