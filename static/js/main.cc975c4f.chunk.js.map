{"version":3,"sources":["MenuBar.js","About.js","3dPrint.js","BoardGames.js","DiscGolf.js","Calculator.js","App.js","serviceWorker.js","index.js"],"names":["MenuBar","className","onClick","this","props","changeView","React","Component","About","state","something","ThreeDPrint","gData","fetch","header","method","resp","ok","Error","statusText","json","lData","console","log","setTimeout","setState","lDisplay","length","map","element","name","BoardGames","nameChange","e","bggName","target","value","shameGames","retrieve","bind","localList","Connect","XMLHttpRequest","open","send","TheDocument","responseXML","RootObj","childNodes","i","children","Customer","gameName","getElementsByTagName","innerHTML","push","shameDisplay","type","onChange","DiscGolf","Calculator","Calculate","registerVal","registerFunc","trueVal","parseFloat","Math","pow","startFresh","ButtonPressed","event","mathType","PI","cos","sin","tan","sqrt","displayVal","id","readOnly","defaultValue","Identity","click","CalcButton","App","ChangeView","currentView","theView","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cc975c4f.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Site.css';\r\nimport './MenuBar.css';\r\n\r\nexport default class MenuBar extends React.Component{\r\n   render() {\r\n   \treturn(\r\n\t<div>\r\n\t<nav className=\"NavBar\">\r\n\t\t<ul className=\"NavList\">\r\n\t\t\t<button className='NavItem'  onClick={this.props.changeView}>Home</button>\r\n\t\t\t<button className='NavItem'  onClick={this.props.changeView}>Board Games</button>\r\n\t\t\t<button className='NavItem' onClick={this.props.changeView}>3D Printing</button>\r\n\t\t\t<button className='NavItem'  onClick={this.props.changeView}>Disc Golf</button>\r\n\t\t\t<button className='NavItem'  onClick={this.props.changeView}>Calculator</button>\r\n\t\t\t<button className='NavItemLast'  onClick={this.props.changeView}>Contact</button>\r\n\t\t</ul>\r\n\t</nav>\r\n\t</div>   \t\r\n\t)\r\n   }\r\n}","import React from 'react';\r\nimport './Site.css';\r\n\r\n\r\nexport default class About extends React.Component{\r\n\r\n  constructor(){\r\n       \tsuper(); \r\n\tthis.state = {\r\n            something:0,           //  Current value of entry\r\n\t         }\r\n  }\r\n\r\n   render() {\r\n        return(\r\n           <div>\r\n                <h1>  Welcome to Don's Sandbox </h1>\r\n                <br />\r\n                <p> I built this site mainly as a way to pratice some web development. The site will likely\r\n                    be under constant construction as I try to extend my knowledge of web development.</p>\r\n                <p> This site is build with React and is a single page app. If you want to poke around each\r\n                page has a specific purpose, at lease as I have it planned.</p>\r\n\t         </div>)\r\n   }\r\n}\r\n  \r\n ","import React from 'react';\r\n\r\nexport default class ThreeDPrint extends React.Component{\r\n\r\n  constructor(){\r\n      super(); \r\n\t    this.state = {\r\n          gData: [],\r\n\t    };\r\n  }\r\n \r\n  async componentDidMount(){\r\n//    let obj = {};\r\n//    obj.user = 'Sislar';\r\n    try{                 \r\n//       const resp = await fetch('https://www.thingiverse.com/users/sislar/things', \r\n       const resp = await fetch('https://jsonplaceholder.typicode.com/users', \r\n          {\r\n             header: {\r\n                  \"Content-Type\": \"application/json\"\r\n             },\r\n             method: \"Get\",\r\n//             body:JSON.stringify({obj})\r\n          }\r\n\r\n       )\r\n       if (!resp.ok) {\r\n           throw Error(resp.statusText);\r\n       }\r\n\r\n       // not clear to me why this needs await as we awaited the above item already so \r\n       // we should have the response and this is just a stright data manipulation.\r\n       const lData = await resp.json();\r\n       console.log('Mount1', lData)\r\n       setTimeout('',5000);\r\n       this.setState({ gData: lData });\r\n    } \r\n    catch (error) \r\n    {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n\r\n  render (){\r\n    let lDisplay;\r\n    console.log('render1',this.state.gData.length);\r\n    if(this.state.gData.length === 0)\r\n      { lDisplay = <h1> Loading </h1>}\r\n    else\r\n    {\r\n       lDisplay = this.state.gData.map(function(element){ \r\n       return(<p>Username: {element.name}</p>)});\r\n     }\r\n   console.log('render2',lDisplay);\r\n\r\n    return(<div>\r\n        {lDisplay}\r\n          </div>)\r\n  }\r\n\r\n  //  render() {\r\n  //   return (<div>\r\n  //   // {this.state.gData.map((element, index) => (\r\n  //   //     <p>Username: {element.name}</p>\r\n  //   // ))}\r\n  //   </div>);\r\n  // }  // end render\r\n\r\n}\r\n  ","import React from 'react';\r\nimport './BoardGames.css';\r\n\r\n\r\n\r\nexport default class BoardGames extends React.Component{\r\n\r\n  constructor(){\r\n       \tsuper(); \r\n\t       this.state = {\r\n            bggName:'',           //  Current value of entry\r\n            shameGames: [],       // array of games objects owned and not played\r\n\t         }\r\n  this.retrieve = this.retrieve.bind(this);\r\n\r\n  }\r\n\r\n    nameChange = (e) => {\r\n       this.setState({ bggName: e.target.value });\r\n    }\r\n\r\n    async retrieve(){\r\n    \r\n    let localList = [];\r\n\r\n    try{               \r\n        // Create a connection to the file.\r\n        var Connect = new XMLHttpRequest();\r\n        // Define which file to open and\r\n        // send the request.\r\n        await Connect.open(\"GET\", `https://www.boardgamegeek.com/xmlapi/collection/${this.state.bggName}?own=1&maxplays=1`, false);\r\n// This line triggers a preflight cross site check. (so causes a security error)\r\n//        await Connect.setRequestHeader(\"Content-Type\", \"text/xml\");\r\n        await Connect.send(null);\r\n\r\n      // Place the response in an XML document.\r\n        var TheDocument = Connect.responseXML;\r\n        // Place the root node in an element.\r\n        var RootObj = TheDocument.childNodes[0];\r\n        // Retrieve each customer in turn.\r\n        console.log(`Retrieve`, TheDocument);\r\n        for (var i = 0; i < RootObj.children.length; i++)\r\n        {\r\n         var Customer = RootObj.children[i];\r\n         // Access each of the data values.\r\n         var gameName = Customer.getElementsByTagName(\"name\");\r\n         // var Age = Customer.getElementsByTagName(\"Age\");\r\n         // var Color = Customer.getElementsByTagName(\r\n         //   \"FavoriteColor\");\r\n         // Write the data to console\r\n         console.log(\"Parse:\",Customer,gameName[0].innerHTML);\r\n         localList.push(gameName[0].innerHTML);\r\n\r\n        }\r\n         this.setState({shameGames: localList});\r\n\r\n\r\n    }  // try \r\n    catch (error) \r\n    {\r\n      console.log(\"board thrown:\", error);\r\n    }\r\n\r\n    } // end func\r\n\r\n   render() {\r\n        const shameDisplay = this.state.shameGames.map(e=><li>{e}</li>)\r\n\r\n        return(\r\n           <div>\r\n              <input type=\"text\" onChange={ this.nameChange } />\r\n              <br/>\r\n              <button onClick={this.retrieve}>Retrieve</button>\r\n              <br/>\r\n              <div className=\"shameShelf\">\r\n                  <h2>Shelf Of Shame</h2>\r\n                  <ul>\r\n                  {shameDisplay}\r\n                  </ul>\r\n              </div>\r\n\t         </div>\r\n\t     )\r\n   }\r\n}\r\n\r\n","import React from 'react';\r\n//import './Calculator.css';\r\n\r\n\r\nexport default class DiscGolf extends React.Component{\r\n\r\n  constructor(){\r\n       \tsuper(); \r\n\tthis.state = {\r\n            something:0,           //  Current value of entry\r\n\t         }\r\n  }\r\n\r\n   render() {\r\n        return(\r\n           <div>\r\n               <h1>  Coming soon ability to record your scores.</h1>\r\n\t         </div>\r\n\t     )\r\n   }\r\n}\r\n  \r\n","import React from 'react';\r\nimport './Calculator.css';\r\n// import CalcButton from './CalcButton.js';  \r\n\r\nclass Calculator extends React.Component{\r\n\r\n  constructor(){\r\n       \tsuper(); \r\n\tthis.state = {\r\n            displayVal: \"0\",        // current value rounded to fit in display\r\n            trueVal:0,              //  Current value of displayed register\r\n            registerVal: 0,         // the previous value of the entry after a operator is pressed\r\n            registerFunc: null,     // the pressed operator\r\n            startFresh: true,       // an operator was pressed so next number should start a new entry;\r\n            mathType: \"Deg\",\r\n\t         }\r\n  }\r\n\r\n  Calculate = () =>\r\n  {\r\n    // deconstruct the state variable for easier reading\r\n    const {registerVal, registerFunc, trueVal} = this.state;\r\n\r\n     switch (registerFunc)\r\n     {\r\n\t     case '+':  this.setState({trueVal: parseFloat(registerVal) + parseFloat(trueVal)}); break; \r\n\t     case '-':  this.setState({trueVal: parseFloat(registerVal) - parseFloat(trueVal)}); break; \r\n\t     case '*':  this.setState({trueVal: parseFloat(registerVal) * parseFloat(trueVal)}); break; \r\n\t     case '/':  this.setState({trueVal: parseFloat(registerVal) / parseFloat(trueVal)}); break; \r\n       case 'x^y': this.setState({trueVal: Math.pow(parseFloat(trueVal), parseFloat(registerVal))}); break; \r\n\t     default: console.log('Bad Case ', registerFunc);\r\n     }\r\n     this.setState({registerFunc:null});\r\n     this.setState({startFresh: true});\r\n   }\r\n\r\n\r\n  ButtonPressed = (event) =>\r\n  {\r\n    // deconstruct the state variable for easier reading\r\n    const {mathType, trueVal, startFresh} = this.state;\r\n\r\n    // A number was pressed\r\n    if((event.target.innerHTML > -1 & event.target.innerHTML < 10) || event.target.innerHTML === '.')\r\n    {\r\n      if (startFresh)\r\n      {\r\n        this.setState({trueVal: event.target.innerHTML});\r\n        this.setState({startFresh: false});\r\n      }\r\n      else\r\n      {\r\n            this.setState({trueVal: trueVal +  event.target.innerHTML});\r\n      }\r\n    }\r\n    else  // An operand was pressed\r\n    {\r\n      switch(event.target.innerHTML)\r\n      {\r\n        // 2 operand functions\r\n        case '-':\r\n        case '+':\r\n        case '/': \r\n        case '*':\r\n        case 'x^y':\r\n          if(this.state.registerFunc === null)\r\n          {\r\n            this.setState({registerVal: trueVal}); \r\n          }\r\n          else\r\n          {\r\n            this.Calculate();   // The sets the registerVal \r\n          }\r\n          this.setState({registerFunc: event.target.innerHTML});\r\n          this.setState({startFresh: true});\r\n          break;\r\n\r\n          // Clearing functions\r\n          case 'C': this.setState({registerVal: 0}); this.setState({registerFunc: null});  // eslint-disable-next-line\r\n          case 'CE':  this.setState({trueVal: 0}); this.setState({startFresh: true}); break ;\r\n\r\n          //Single operand functions.\r\n          case 'Pi': this.setState({trueVal: Math.PI}); break ;\r\n          case 'cos':  (mathType === 'Rad') ? \r\n                            this.setState({trueVal: Math.cos(trueVal)}) : \r\n                            this.setState({trueVal: Math.cos(trueVal*(Math.PI/180))})\r\n                            break ;\r\n          case 'sin':  (mathType === 'Rad') ? \r\n                            this.setState({trueVal: Math.sin(trueVal)}) : \r\n                            this.setState({trueVal: Math.sin(trueVal*(Math.PI/180))})\r\n                            break ;\r\n          case 'tan':  (mathType === 'Rad') ? \r\n                            this.setState({trueVal: Math.tan(trueVal)}) : \r\n                            this.setState({trueVal: Math.tan(trueVal*(Math.PI/180))})\r\n                            break ;\r\n          case 'log': this.setState({trueVal: Math.log(trueVal)});break ;\r\n          case 'Sqrt': this.setState({trueVal: Math.sqrt(trueVal)}); break ;\r\n\r\n          case 'Deg': this.setState({mathType: 'Rad'}); break ;\r\n          case 'Rad': this.setState({mathType: \"Deg\"}); break ;\r\n\r\n          case '=': this.Calculate();  break ;\r\n\t      default: \r\n          console.log('Missing case ', event.target.innerHTML);\r\n\t  }\r\n      }\r\n\r\n     console.log('pressed');\r\n     this.setState({displayVal: trueVal});\r\n  }\r\n\r\n   render() {\r\n        return(\r\n            <div id=\"CalcFrame\">\r\n  \t        <textarea id='CalcDisplay' readOnly defaultValue={this.state.trueVal}></textarea>\r\n        <CalcButton Identity=\"sin\" click={this.ButtonPressed} />\r\n        <CalcButton Identity=\"cos\" click={this.ButtonPressed} />\r\n        <CalcButton Identity=\"tan\" click={this.ButtonPressed} />\r\n        <CalcButton Identity=\"log\" click={this.ButtonPressed} />\r\n        <CalcButton Identity=\"Pi\" click={this.ButtonPressed} />\r\n        <CalcButton Identity=\"Sqrt\" click={this.ButtonPressed} />\r\n        <CalcButton Identity=\"x^y\" click={this.ButtonPressed} />\r\n        <CalcButton Identity={this.state.mathType} click={this.ButtonPressed} />\r\n        <CalcButton Identity=\"1\" click={this.ButtonPressed} />\r\n    \t\t<CalcButton Identity=\"2\" click={this.ButtonPressed} />\r\n    \t\t<CalcButton Identity=\"3\" click={this.ButtonPressed} />\r\n\t   \t  <CalcButton Identity=\"/\" click={this.ButtonPressed} />\r\n    \t\t<CalcButton Identity=\"4\" click={this.ButtonPressed} />\r\n    \t\t<CalcButton Identity=\"5\" click={this.ButtonPressed} />\r\n    \t\t<CalcButton Identity=\"6\" click={this.ButtonPressed} />\r\n    \t\t<CalcButton Identity=\"*\" click={this.ButtonPressed} />\r\n    \t\t<CalcButton Identity=\"7\" click={this.ButtonPressed} />\r\n    \t\t<CalcButton Identity=\"8\" click={this.ButtonPressed} />\r\n    \t\t<CalcButton Identity=\"9\" click={this.ButtonPressed} />\r\n    \t\t<CalcButton Identity=\"-\" click={this.ButtonPressed} />\r\n    \t\t<CalcButton Identity=\".\" click={this.ButtonPressed} />\r\n    \t\t<CalcButton Identity=\"0\" click={this.ButtonPressed} />\r\n    \t\t<CalcButton Identity=\"<-\" click={this.ButtonPressed} />\r\n    \t\t<CalcButton Identity=\"+\" click={this.ButtonPressed} />\r\n    \t\t<CalcButton Identity=\"C\" click={this.ButtonPressed} />\r\n    \t\t<CalcButton Identity=\"CE\" click={this.ButtonPressed} />\r\n        <br />\r\n        <CalcButton id=\"ButtonEqual\" Identity=\"=\" click={this.ButtonPressed} />\r\n\t     </div>\r\n\t     )\r\n   }\r\n}\r\n\r\nconst CalcButton = ({Identity, click}) => {\r\n   return(\r\n  <button className=\"BasicCalcButton\" onClick={click} >{Identity}</button>\r\n  );\r\n}\r\n\r\n\r\nexport default Calculator;\r\n","import React from 'react';\nimport './App.css';\nimport MenuBar from './MenuBar'\nimport About from './About'\nimport ThreeDPrint from './3dPrint'\nimport BoardGames from './BoardGames'\nimport DiscGolf from './DiscGolf'\nimport Calculator from './Calculator'\n\n\nexport default class App extends React.Component{\n\n  constructor(){\n       \tsuper(); \n\t    this.state = {\n            currentView: 'Home',  //  Current value of entry\n\t         }\n\n        // needed for strang \"this\" reasons.\n\t    this.ChangeView = this.ChangeView.bind(this);\n  }\n\n  ChangeView = (event) => {\n       this.setState({currentView: event.target.innerHTML});\n  }\n\n   render() {\n    let theView;\n\n    // can't have conidtionals inside the return function so need to\n    // create varabiles to render ahead of time.\n    switch(this.state.currentView){\n    \tcase 'Home' : theView = <About />; break;\n    \tcase 'Board Games' : theView = <BoardGames />; break;\n    \tcase '3D Printing' : theView = <ThreeDPrint />; break;\n    \tcase 'Disc Golf' : theView = <DiscGolf />; break;\n        case 'Calculator': theView = <Calculator />;  break;\n        default: theView = <h1> Bad link </h1>;  break;\n    }\n\n   \treturn(\n\t<div>\n    \t<MenuBar changeView={this.ChangeView}/>\n        {theView}\n\n\t</div>   \t\n\t)\n   } // end render\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}